<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vuex on hironeko desu</title>
    <link>http://hironeko.github.io/tags/vuex/</link>
    <description>Recent content in Vuex on hironeko desu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 29 Mar 2019 23:55:43 +0900</lastBuildDate>
    
	<atom:link href="http://hironeko.github.io/tags/vuex/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vuexに挑戦！！</title>
      <link>http://hironeko.github.io/posts/201903/20190330/</link>
      <pubDate>Fri, 29 Mar 2019 23:55:43 +0900</pubDate>
      
      <guid>http://hironeko.github.io/posts/201903/20190330/</guid>
      <description>何事も手を動かすことが大事 Qiita の記事(下記記載)では、いきなりVuexの導入から始まっているがリンクにある gist のページを見るとVueの環境構築から手順があるのでわからない人は参考にしましょう。
例によって Linter は、今回も抜きます。というのも今回は、構文に敏感に注意するより手を動かして Vue と仲良くなるのが目的なのでそこは、捨てます。実際の開発では、大切な要素であることは忘れずに進めます。
自分は以下のように設定しました。
? Project name your_app_name ? Project description A Vue.js project ? Author hironeko &amp;lt;xxxxxxxx@exsample.com&amp;gt; ? Vue build standalone ? Install vue-router? Yes ? Use ESLint to lint your code? No ? Set up unit tests No ? Setup e2e tests with Nightwatch? No ? Should we run `npm install` for you after the project has been created? (recommended) yarn  Vuex を install さっそく install するみたいですね。待ってました。</description>
    </item>
    
    <item>
      <title>Vueで1ページアプリ</title>
      <link>http://hironeko.github.io/posts/201903/20190329/</link>
      <pubDate>Fri, 29 Mar 2019 00:05:20 +0900</pubDate>
      
      <guid>http://hironeko.github.io/posts/201903/20190329/</guid>
      <description>Vue.js だけでひとまず何かを作成 今回は、時計のアプリケーションを写経。Linter は使用せずです。
進め方は参考サイトを元に進めました。
CSS はコピペしたがそれ以外は写経、手に馴染めば何も考えなくても手が勝手に動くようになるものなので。戦地の道も一歩からですね。
今回のアプリの写経での学び computedの挙動 ただし年月日時分の箇所すかね。
秒は、method でもいいわけですね。
例えば、このコードでは、computed にsecondsを methods に移動させます。
seconds() { return zeroPadding(this.date.getSeconds(), 2) }  としtemplateの方は、seconds &amp;gt; seconds()に変更し再起動しても変化がありません。
値に変化が起きない限り再計算処理が走らないのが computed です。 computed の使うポイントとしては、キャッシュしたい何かを返す必要がある(再計算する必要が低い)場合に適任
methods に関しては、算出(計算)結果のキャッシュはされません。
日本語で説明を書くには、ちょっと通じにくい文章になりますな。
大雑把に基礎の学習を終えひとまず何かしら作って手に馴染ませる ということで次は、vuex を使用しての学習。以前 component についは、重要と言う話だったがここで実際に手を動かし学習を進める。
下記参考サイトのvue.js＋Vuexチュートリアルを参考に進める。(1 年前のものなので必要に応じて適宜変更を加えながら進める)
参考サイト 第一回 Vue.js で Web アプリをつくろう！
vue.js ＋ Vuex チュートリアル</description>
    </item>
    
  </channel>
</rss>