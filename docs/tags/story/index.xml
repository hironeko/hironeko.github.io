<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Story on hironeko desu</title>
    <link>http://hironeko.github.io/tags/story/</link>
    <description>Recent content in Story on hironeko desu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 29 May 2019 23:25:59 +0900</lastBuildDate>
    
	<atom:link href="http://hironeko.github.io/tags/story/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>久々に投稿</title>
      <link>http://hironeko.github.io/posts/201905/20190529/</link>
      <pubDate>Wed, 29 May 2019 23:25:59 +0900</pubDate>
      
      <guid>http://hironeko.github.io/posts/201905/20190529/</guid>
      <description>モチベーション維持が大変 プログラミングが好きで今の仕事をやっている(半分正解)
技術の探求は大好きなんだけどもめんどくさがりすぎる。
それと人と微妙に感覚が異なっているのが自分的に納得いかない
ラバーダッキング的な学習方法が主だからより一層ね
それはさておき 最近職場で一人でもくもくと開発と PM 的なことを並行して行なっているんだけども その際に Laravel でちょっとしたコマンドを作成した
repository pattern を採用しているんだけど DDD に寄せている設計で書いてて Laravel の artisan command には repository file の作成 command なんてなくてただただだるい作業が必ず発生するからめんどくて作った話
ただ参考にしたサイトのコードにちょっと手を加えた程度
あるとないとではだいぶ違う
&amp;lt;?php declare(strict_types=1); namespace App\Console\Commands; use Illuminate\Console\Command; /** * CreateReposioryFileCommand class */ class CreateReposioryFileCommand extends Command { /** * @const string repository dir path */ const REPOSITORIES_PATH = &#39;app/Repositories/&#39;; /** * The name and signature of the console command. * * @var string */ protected $signature = &#39;make:repository {repositoryName : The name of repository}&#39;; /** * The console command description.</description>
    </item>
    
    <item>
      <title>JSの復習</title>
      <link>http://hironeko.github.io/posts/201903/20190324/</link>
      <pubDate>Sun, 24 Mar 2019 23:10:42 +0900</pubDate>
      
      <guid>http://hironeko.github.io/posts/201903/20190324/</guid>
      <description>React と Vue 最近は業務で使用している PHP 以外だとGoの勉強をしているがJSについてもスキルをあげたいのが正直な話だ。
よって並行して勉強することとにする
##　なぜするのか？
自分のいくつかあるウィークポイントの一つにモダンな JS に対しての経験値が引くことがあげられる。
どのように進めるのか？ 基本的にマルチタスクって生産性が低くなるので好きではないんだけども
Goの勉強をしながら気晴らしにJSの学習をすることにする
最終的に基礎的な概念や知識の理解、把握が追いつた段階で
Goを API サーバーとして使用し、ReactとVue両方とも同じものを作成することにした。
どんなものを作成するかはまだ決めてないが、よくある Todo 系は、たぶん実用的とは言えないのでそれは、学習の過程に盛り込むことにする
最終的なゴール どちらの FW でも業務で使用したとしても問題ないレベルをゴールとする。
次回以降 順に初歩的なことから忘備録として発信していく</description>
    </item>
    
  </channel>
</rss>